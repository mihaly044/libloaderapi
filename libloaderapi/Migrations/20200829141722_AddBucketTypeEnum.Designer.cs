// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using libloaderapi.Domain.Database;

namespace libloaderapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200829141722_AddBucketTypeEnum")]
    partial class AddBucketTypeEnum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BucketType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("LastUsed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Sha256")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c6ef4b2-2d79-49fe-89fc-9c509dce77cb"),
                            Name = "LibAdmin"
                        },
                        new
                        {
                            Id = new Guid("af6a4c69-5ad3-47b8-9208-e6a38ef78d18"),
                            Name = "LibUser"
                        },
                        new
                        {
                            Id = new Guid("eac855aa-41e8-4602-925e-d2156205badc"),
                            Name = "LibClient"
                        });
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("378ce141-8bca-41fa-989b-9d421dddd61d"),
                            Name = "admin",
                            Password = "9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08"
                        },
                        new
                        {
                            Id = new Guid("cc75d881-42e4-41eb-b8f5-4e297e6e61b8"),
                            Name = "user",
                            Password = "9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08"
                        });
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("378ce141-8bca-41fa-989b-9d421dddd61d"),
                            RoleId = new Guid("9c6ef4b2-2d79-49fe-89fc-9c509dce77cb")
                        },
                        new
                        {
                            UserId = new Guid("cc75d881-42e4-41eb-b8f5-4e297e6e61b8"),
                            RoleId = new Guid("af6a4c69-5ad3-47b8-9208-e6a38ef78d18")
                        });
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.Client", b =>
                {
                    b.HasOne("libloaderapi.Domain.Database.Models.User", "User")
                        .WithMany("Clients")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.UserRole", b =>
                {
                    b.HasOne("libloaderapi.Domain.Database.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("libloaderapi.Domain.Database.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
