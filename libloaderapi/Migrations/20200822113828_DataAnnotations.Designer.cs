// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using libloaderapi.Domain.Database;

namespace libloaderapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200822113828_DataAnnotations")]
    partial class DataAnnotations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.Binary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Sha1")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Binaries");
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("714487dd-5cd0-4c89-8d5c-7e8c1a5c7c4e"),
                            Name = "LibAdmin"
                        },
                        new
                        {
                            Id = new Guid("405c5b34-460d-4e24-a8bd-ae0bd142a861"),
                            Name = "LibUser"
                        },
                        new
                        {
                            Id = new Guid("caba6a02-eecb-4b42-bebe-0012558c24a0"),
                            Name = "LibClient"
                        });
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0eb1f710-60f9-40f7-a2bc-aa00dea1551e"),
                            Name = "admin",
                            Password = "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
                        },
                        new
                        {
                            Id = new Guid("bbabf827-9051-45ae-ab8e-fba38b0d93f9"),
                            Name = "user",
                            Password = "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
                        },
                        new
                        {
                            Id = new Guid("7651e512-0331-45df-9613-338a652f6770"),
                            Name = "client",
                            Password = "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
                        });
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("0eb1f710-60f9-40f7-a2bc-aa00dea1551e"),
                            RoleId = new Guid("714487dd-5cd0-4c89-8d5c-7e8c1a5c7c4e")
                        },
                        new
                        {
                            UserId = new Guid("bbabf827-9051-45ae-ab8e-fba38b0d93f9"),
                            RoleId = new Guid("405c5b34-460d-4e24-a8bd-ae0bd142a861")
                        },
                        new
                        {
                            UserId = new Guid("7651e512-0331-45df-9613-338a652f6770"),
                            RoleId = new Guid("caba6a02-eecb-4b42-bebe-0012558c24a0")
                        });
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.Binary", b =>
                {
                    b.HasOne("libloaderapi.Domain.Database.Models.User", "User")
                        .WithMany("Binaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("libloaderapi.Domain.Database.Models.UserRole", b =>
                {
                    b.HasOne("libloaderapi.Domain.Database.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("libloaderapi.Domain.Database.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
